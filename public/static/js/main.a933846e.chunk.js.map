{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","cardItem","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","src","link","onClick","onCardClick","alt","name","type","onCardDelete","onCardLike","length","Main","user","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","card","Footer","PopupWithForm","isOpen","onClose","title","action","method","onSubmit","noValidate","children","buttonText","ImagePopup","EditProfilePopup","useState","setName","setDescription","useEffect","e","preventDefault","onUpdateUser","id","minLength","maxLength","placeholder","required","onChange","target","value","EditAvatarPopup","avatarRef","useRef","current","onUpdateAvatar","console","log","ref","AddPlacePopup","image","setImage","api","baseUrl","headers","this","_baseUrl","fetch","then","res","_getResponseData","body","JSON","stringify","cardId","ok","json","Promise","reject","status","authorization","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","getUserInfo","data","catch","err","getInitialCards","cardsData","Provider","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","item","updateUser","editUserInfo","addCard","updateAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a933846e.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n    return (\n    <header className=\"header\">\n        <div className=\"header__logo\"></div>\n    </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n    const currentUser = React.useContext(CurrentUserContext)\n    const isOwn = props.cardItem.owner._id === currentUser._id;\n    const cardDeleteButtonClassName = (`${isOwn ? 'cards__remove-button' :'cards__remove-button_hidden'}`)\n\n    const isLiked = props.cardItem.likes.some(i => i._id === currentUser._id);\n    const cardLikeButtonClassName = (`cards__like ${!isLiked ? '' : 'cards__like_active'}`); \n\n    function handleClick() {\n        props.onCardClick(props.cardItem);\n      } \n\n    function handleLikeClick() {\n        props.onCardLike(props.cardItem)\n    }\n\n    function handleDeleteClick() {\n        props.onCardDelete(props.cardItem)\n    }\n\n    return (\n        <div className=\"cards__item\" >\n            <img className=\"cards__photo\" src={props.cardItem.link} onClick={handleClick} alt={props.cardItem.name}/>\n            <button className={cardDeleteButtonClassName} type=\"button\" onClick={handleDeleteClick}></button>\n            <div className=\"cards__content\">\n                <h3 className=\"cards__title\">{props.cardItem.name}</h3>\n                <div className=\"cards__like-block\">\n                    <button className={cardLikeButtonClassName} type=\"button\" onClick={handleLikeClick}></button>\n                    <p className=\"cards__likes_count\">{(props.cardItem.likes).length}</p>\n                </div>\n            </div>\n        </div> \n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n    const user = React.useContext(CurrentUserContext);\n\n    function renderCard(card) {\n        return(\n            <Card cardItem={card} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete} key={card._id}/>\n        );\n    }\n\n    return (\n        <main className=\"content\">\n                <section className=\"profile\">\n                    <div className=\"profile__avatar-content\">\n                        <img className=\"profile__avatar\" src={user.avatar} alt=\"аватарка\" />\n                        <button className=\"profile__edit-avatar-button\" type=\"button\" onClick={props.onEditAvatar}/>\n                    </div>\n                    <div className=\"profile__info\">\n                        <div className=\"profile__header\">\n                            <h1 className=\"profile__name\">{user.name}</h1>\n                            <button className=\"profile__edit-button\" type=\"button\" onClick={props.onEditProfile}></button>\n                        </div>\n                        <p className=\"profile__description\">{user.about}</p>\n                    </div>\n                    <button className=\"profile__add-button\" type=\"button\" onClick={props.onAddPlace}></button>\n                </section>\n                <section className=\"cards\">{props.cards.map(renderCard)}</section>\n        </main>\n    );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n                <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\n\nfunction PopupWithForm(props) {\n    return (\n        <section className={`popup popup_${props.name} ${props.isOpen? 'popup_is-opened' : ''}`}>\n                <div className=\"popup__container\">\n                    <button className=\"popup__close\" type=\"button\" onClick={props.onClose}></button>\n                    <h2 className=\"popup__title\">{props.title}</h2>\n                    <form className=\"popup__form\" action=\"URL\" method=\"POST\" name={props.name} onSubmit={props.onSubmit} noValidate>\n                        {props.children}\n                        <button className=\"popup__save-button\" type=\"submit\">{props.buttonText}</button>\n                    </form>\n                </div>\n        </section>\n    );\n}\n\nexport default PopupWithForm;","import React from \"react\";\n\nfunction ImagePopup(props) {\n    return (\n        <section className={`popup popup_photo-preview ${props.card? 'popup_is-opened' : ''}`}>\n                <div className=\"popup__preview-container\">\n                    <button className=\"popup__close\" type=\"button\" onClick={props.onClose}></button>\n                    <img className=\"popup__preview-photo\" src={props.card? props.card.link : ''} alt=\"фото\"/>\n                    <h3 className=\"popup__preview-subtitle\">{props.card? props.card.name : ''}</h3>\n                </div>\n        </section>\n    );\n}\n\nexport default ImagePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext'\n\nfunction EditProfilePopup(props) {\n    const [name, setName] = React.useState('');\n    const [about, setDescription] = React.useState('');\n    const currentUser = React.useContext(CurrentUserContext)\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handelChangeName(e) {\n       setName(e.target.value);\n    }\n\n    function handelChangeDescription(e) {\n        setDescription(e.target.value)\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateUser({\n            name,\n            about: about,\n          });\n    }\n\n    return (\n        <PopupWithForm name=\"edit-profile\" onSubmit={handleSubmit} title=\"Редактировать профиль\" buttonText=\"Сохранить\" \n        isOpen={props.isOpen} onClose={props.onClose}\n        children={<fieldset className=\"popup__profile-info\">\n        <section className=\"popup__form-section\">\n            <input\n            id=\"name-input\"\n            className=\"popup__field popup__field_input-name\" \n            type=\"text\" \n            name=\"name\" \n            minLength=\"2\"\n            maxLength=\"40\"\n            placeholder=\"Имя\"\n            required\n            onChange={handelChangeName}\n            value={name || ''}\n            />\n            <span id=\"name-input-error\" className=\"popup__field-error-text\"></span>\n        </section>\n        <section className=\"popup__form-section\">\n            <input\n            id=\"description-input\"\n            className=\"popup__field popup__field_input-description\" \n            type=\"text\" \n            name=\"about\" \n            minLength=\"2\"\n            maxLength=\"200\"\n            placeholder=\"Занятие\"\n            required\n            onChange={handelChangeDescription}\n            value={about || ''}\n            />\n            <span id=\"description-input-error\" className=\"popup__field-error-text\"></span>\n        </section>\n    </fieldset>}\n      />\n    );\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n    const avatarRef = React.useRef();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        const link = avatarRef.current.value\n        props.onUpdateAvatar(avatarRef.current.value)\n        console.log(link);\n    }\n\n    return (\n        <PopupWithForm name=\"update-avatar\" onSubmit={handleSubmit} title=\"Обновить аватар\" buttonText=\"Сохранить\" \n              isOpen={props.isOpen}  onClose={props.onClose}\n              children= {<fieldset className=\"popup__profile-info\">\n              <section className=\"popup__form-section\">\n               <input \n                id=\"card-link\"\n                className=\"popup__field popup__field-input-avatar-link\" \n                type=\"URL\" \n                name=\"avatar\" \n                ref={avatarRef}\n                placeholder=\"Ссылка на аватарку\"\n                required\n               />\n               <span id=\"card-link-error\" className=\"popup__field-error-text\"></span>\n             </section>\n           </fieldset>}\n            />\n    );\n}\n\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n    const [name, setName] = React.useState('')\n    const [image, setImage] = React.useState('');\n    \n    function handelChangeName(e) {\n        setName(e.target.value);\n    }\n\n    function handelChangImage(e) {\n        setImage(e.target.value);\n    }\n\n    function handelSubbmit(e) {\n        e.preventDefault();\n        props.onAddPlace({\n            name,\n            image\n        });\n    }\n\n    return (\n        <PopupWithForm name=\"add-card\" onSubmit={handelSubbmit} title=\"Новое место\" buttonText=\"Создать\" \n              isOpen={props.isOpen}  onClose={props.onClose}\n              children={<fieldset className=\"popup__profile-info\">\n              <section className=\"popup__form-section\">\n                  <input\n                  id=\"card-name\"\n                  className=\"popup__field popup__field-input-card-name\" \n                  type=\"text\" \n                  name=\"name\"\n                  placeholder=\"Название\"\n                  minLength=\"2\"\n                  maxLength=\"30\"\n                  required\n                  onChange={handelChangeName}\n                  />\n                  <span id=\"card-name-error\" className=\"popup__field-error-text\"></span>\n              </section>\n              <section className=\"popup__form-section\">\n                  <input\n                  id=\"card-link\"\n                  className=\"popup__field popup__field-input-card-link\" \n                  type=\"URL\" \n                  name=\"image\" \n                  placeholder=\"Ссылка на картинку\"\n                  required\n                  onChange={handelChangImage}\n                  />\n                  <span id=\"card-link-error\" className=\"popup__field-error-text\"></span>\n              </section>\n          </fieldset>}\n          />\n    );    \n}\n\nexport default AddPlacePopup;","class Api {\n    constructor({baseUrl, headers}) {\n        this._baseUrl = baseUrl;\n        this.headers = headers;\n    }\n\n    getInitialCards() {\n        return fetch(this._baseUrl + '/cards', {\n            method: \"GET\",\n            headers: this.headers, \n        }).then((res) => {\n            return this._getResponseData(res)\n        })\n    }\n\n    getUserInfo() {\n        return fetch(this._baseUrl + '/users/me', {\n            method: \"GET\",\n            headers: this.headers \n        })\n        .then((res) => {\n            return this._getResponseData(res)\n        })\n    }\n\n    editUserInfo({name, about}) {\n        return fetch(this._baseUrl + '/users/me', {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify({\n                name: name,\n                about: about\n            })\n        })\n        .then((res) => {\n            return this._getResponseData(res)\n        })\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        if(!isLiked) {\n            return fetch(this._baseUrl + `/cards/likes/${cardId}`, {\n                method: 'PUT',\n                headers: this.headers,\n            })\n            .then((res) => {\n                return this._getResponseData(res)\n            })\n        } else {\n            return fetch(this._baseUrl + `/cards/likes/${cardId}`, {\n                method: 'DELETE',\n                headers: this.headers,\n            })\n            .then((res) => {\n                return this._getResponseData(res)\n            })\n        }\n    }\n\n    addCard({name, image}) {\n        return fetch(this._baseUrl + '/cards', {\n            method: 'POST',\n            headers: this.headers,\n            body: JSON.stringify({\n                name: name,\n                link: image, \n            })\n        })\n        .then((res) => {\n            return this._getResponseData(res)\n        })\n    }\n\n    deleteCard(cardId) {\n        return fetch(this._baseUrl + `/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this.headers\n        }).then((res)=> {\n            return this._getResponseData(res)\n        })\n    }\n\n\n    updateAvatar({avatar}) {\n        return fetch(this._baseUrl + `/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify({\n                avatar: avatar\n            })\n        }).then((res) => {\n            return this._getResponseData(res)\n        })\n    }\n\n    _getResponseData(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n}\n\nconst  api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-17',\n    headers: {\n        authorization: '30d70770-772a-4d02-94ec-a55a1bdcb3a5',\n        'Content-Type': 'application/json'}\n    });\n  \n  export default api;","import React, { useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport api from '../utils/api';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState();\n  const [currentUser, setCurrentUser] = React.useState({})\n  const [cards, setCards] = React.useState([]);\n\n  useEffect(()=>{\n    api.getUserInfo().then((data) => {\n      setCurrentUser(data)\n    }).catch((err) => {\n      console.log(err);\n    })\n  }\n  , [])\n\n  function handleEditAvatarClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard();\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(updateUser) {\n    api.editUserInfo(updateUser).then((data) => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.updateAvatar({avatar}).then((data) => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch((err) => {\n      console.log(err);\n    })\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked).then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n    }).catch((err) => {\n        console.log(err)\n    })\n}\n\nfunction handleCardDelete(card) {\n  api.deleteCard(card._id).then(() => {\n    const newCards = cards.filter((item) => item._id !== card._id);\n    setCards(newCards)\n  }).catch((err) => {\n      console.log(err)\n  })\n}\n\n  useEffect(() => {\n    api.getInitialCards().then((cardsData) => {\n        setCards(cardsData);\n    }).catch((err) => {\n        console.log(err);\n      });\n    }, []);\n\n    function handleAddPlaceSubmit({name, image}) {\n      api.addCard({name, image}).then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      }).catch((err) => {\n        console.log(err);\n      })\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n      <Header />\n      <Main cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} onEditProfile={handleEditAvatarClick} onAddPlace={handleEditProfileClick} \n        onEditAvatar={handleAddPlaceClick} onCardClick={handleCardClick}\n      />\n      <Footer />\n      <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser}/>\n      <AddPlacePopup onAddPlace={handleAddPlaceSubmit} isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}/>\n            <section className=\"popup popup_photo-preview\">\n                <div className=\"popup__preview-container\">\n                    <button className=\"popup__close\" type=\"button\"></button>\n                    <img className=\"popup__preview-photo\" src=\"#\" alt=\"фото\"/>\n                    <h3 className=\"popup__preview-subtitle\"> </h3>\n                </div>\n            </section>\n            <PopupWithForm name=\"confirm\" title=\"Вы уверены?\" buttonText=\"Да\" />\n            <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}/>\n          <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n    </div>\n   </CurrentUserContext.Provider>\n    \n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}